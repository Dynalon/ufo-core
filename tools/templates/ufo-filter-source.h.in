#ifndef __UFO_FILTER_{{uppercased}}_H
#define __UFO_FILTER_{{uppercased}}_H

#include <glib.h>
#include <ufo/ufo-filter-source.h>

#define UFO_TYPE_FILTER_{{uppercased}}             (ufo_filter_{{underscored}}_get_type())
#define UFO_FILTER_{{uppercased}}(obj)             (G_TYPE_CHECK_INSTANCE_CAST((obj), UFO_TYPE_FILTER_{{uppercased}}, UfoFilter{{camelcased}}))
#define UFO_IS_FILTER_{{uppercased}}(obj)          (G_TYPE_CHECK_INSTANCE_TYPE((obj), UFO_TYPE_FILTER_{{uppercased}}))
#define UFO_FILTER_{{uppercased}}_CLASS(klass)     (G_TYPE_CHECK_CLASS_CAST((klass), UFO_TYPE_FILTER_{{uppercased}}, UfoFilter{{camelcased}}Class))
#define UFO_IS_FILTER_{{uppercased}}_CLASS(klass)  (G_TYPE_CHECK_CLASS_TYPE((klass), UFO_TYPE_FILTER_{{uppercased}}))
#define UFO_FILTER_{{uppercased}}_GET_CLASS(obj)   (G_TYPE_INSTANCE_GET_CLASS((obj), UFO_TYPE_FILTER_{{uppercased}}, UfoFilter{{camelcased}}Class))

typedef struct _UfoFilter{{camelcased}}           UfoFilter{{camelcased}};
typedef struct _UfoFilter{{camelcased}}Class      UfoFilter{{camelcased}}Class;
typedef struct _UfoFilter{{camelcased}}Private    UfoFilter{{camelcased}}Private;

struct _UfoFilter{{camelcased}} {
    /*< private >*/
    UfoFilterSource parent_instance;

    UfoFilter{{camelcased}}Private *priv;
};

/**
 * UfoFilter{{camelcased}}Class:
 *
 * #UfoFilter{{camelcased}} class
 */
struct _UfoFilter{{camelcased}}Class {
    /*< private >*/
    UfoFilterSourceClass parent_class;
};

GType ufo_filter_{{underscored}}_get_type (void);
UfoFilter *ufo_filter_plugin_new (void);

#endif
